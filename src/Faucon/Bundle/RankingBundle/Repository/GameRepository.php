<?php

namespace Faucon\Bundle\RankingBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Faucon\DataProviders\IDataTablesRepository;

/**
 * GameRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GameRepository extends EntityRepository implements IDataTablesRepository
{
    public function findLastFive()
    {
        return $this->getEntityManager()
                ->createQueryBuilder()
                ->select('g')
                ->from('FauconRankingBundle:Game', 'g')
                ->orderBy('g.played', 'desc')
                ->setMaxResults(5)
                ->getQuery()
                ->getResult();
    }
    
    public function findLastFiveInCategory($categoryid)
    {
        $em = $this->getEntityManager();
        $category = $em->getRepository('FauconRankingBundle:Category')->find($categoryid);
        return $em
                ->createQueryBuilder()
                ->select('g')
                ->from('FauconRankingBundle:Game', 'g')
                ->join('g.challenge', 'c')
                ->where('c.category = ?1')
                ->setParameter(1, $category)
                ->orderBy('g.played', 'desc')
                ->setMaxResults(5)
                ->getQuery()
                ->getResult();
    }

    public function getDataTablesResult(ContainerInterface $container, $pageoffset, $pagesize, $options)
    {
        $dateutility = $container->get('date_utility');
        $q = $this->getEntityManager()
                ->createQueryBuilder()
                ->select('g')
                ->from('FauconRankingBundle:Game', 'g');
        $q = $this->addUserPredicate($container, $q);
        $result = $q->orderBy('g.played', 'desc')
                ->setFirstResult($pageoffset)
                ->setMaxResults($pagesize)
                ->getQuery()
                ->getResult();
        $data = array();
        foreach ($result as $game)
        {
            $row = array();
            $row[] = $game->getChallenge()->getChallenger()->__toString();
            $row[] = $game->getChallenge()->getChallenged()->__toString();
            $row[] = $game->getChallenge()->getCategory()->getClub()->getName();
            $row[] = $game->getChallenge()->getCategory()->getName();
            $row[] = $game->getDescription();
            $row[] = $dateutility->ago($game->getPlayed()->format('Y-m-d H:i:s'));
            $row[] = $game->getScore()->__toString();
            $data[] = $row;
        }
        return $data;
    }
    
    private function addUserPredicate(ContainerInterface $container, \Doctrine\ORM\QueryBuilder $q)
    {
        if ($container->get('security.context')->isGranted('ROLE_USER')) {
            $user = $container->get('security.context')->getToken()->getUser();
            $clubrelations = $user->getClubRelations();
            $clubs = array();
            foreach($clubrelations as $relation) {
                $clubs[] = $relation->getClub()->getId();
            }
            $q = $q->leftJoin('g.challenge', 'c')
                    ->leftJoin('c.category', 'ca')
                    ->leftJoin('ca.club', 'cl')
                    ->add('where', $q->expr()->in('cl.id', '?1'))
                    ->setParameter(1, $clubs);
        }
        return $q;
    }

    public function getDataTablesRowsCount(ContainerInterface $container)
    {
        $q = $this->getEntityManager()
                ->createQueryBuilder()
                ->select('count(g)')
                ->from('FauconRankingBundle:Game', 'g');
        $q = $this->addUserPredicate($container, $q);
        return $q->getQuery()
                ->getSingleScalarResult();
    }
    
    public function getLoser(\Faucon\Bundle\RankingBundle\Entity\Game $game)
    {
        if ($game->getWinner() == $game->getChallenge()->getChallenger()) {
            return $game->getChallenge()->getChallenged();
        }
        return $game->getChallenge()->getChallenger();
    }
}