<?php

namespace Faucon\Bundle\RankingBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Faucon\Bundle\RankingBundle\Entity\Category;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends EntityRepository
{
    public function findAll()
    {
        return $this->getEntityManager()
                ->createQueryBuilder()
                ->select('c')
                ->from('FauconRankingBundle:Category', 'c')
                ->orderBy('c.name')
                ->getQuery()
                ->getResult();
    }
    
    public function getPlayerCount(Category $category)
    {
        try
        {
            return $this->getEntityManager()
                    ->createQueryBuilder()
                    ->select('count(r)')
                    ->from('FauconRankingBundle:Ranking', 'r')
                    ->where('r.category = ?1')
                    ->setParameter(1, $category)
                    ->getQuery()
                    ->getSingleScalarResult();
        }
        catch (\Doctrine\ORM\NoResultException $ex)
        {
            return 0;
        }        
    }
    
    public function findAllInClub(\Faucon\Bundle\ClubBundle\Entity\Club $club)
    {
        return $this->getEntityManager()
                ->createQueryBuilder()
                ->select('c')
                ->from('FauconRankingBundle:Category', 'c')
                ->where('c.club = ?1')
                ->setParameter(1, $club)
                ->orderBy('c.name', 'asc')
                ->getQuery()
                ->getResult();
    }
    
    public function findAllByClubs($clubs)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        return $qb->select('c')
                ->from('FauconRankingBundle:Category', 'c')
                ->add('where', $qb->expr()->in('c.club', '?1'))
                ->setParameter(1, $clubs)
                ->orderBy('c.name', 'asc')
                ->getQuery()
                ->getResult();
    }
    
    public function findAllGroupedByClub()
    {
        return $this->getEntityManager()
                ->createQueryBuilder()
                ->select('cl, c')
                ->from('FauconRankingBundle:Category', 'c')
                ->join('c.club', 'cl')
                ->groupBy('c.id')
                ->orderBy('c.name', 'asc')
                ->getQuery()
                ->getResult();
    }
    
    public function findAllByUser(\Faucon\Bundle\ClubBundle\Entity\User $user)
    {
        return $this->getEntityManager()
                ->createQueryBuilder()
                ->select('r, c')
                ->from('FauconRankingBundle:Ranking', 'r')
                ->join('r.player', 'p')
                ->join('r.category', 'c')
                ->where('p = ?1')
                ->setParameter(1, $user)
                ->orderBy('c.name', 'asc')
                ->getQuery()
                ->getResult();
    }
    
    public function updateCategoriesFor(\Faucon\Bundle\ClubBundle\Entity\User $user, $categoryids, \Faucon\Bundle\ClubBundle\Entity\User $currentuser)
    {
        $em = $this->getEntityManager();
        // Remove player from categories not in $categoriesid
        $qb1 = $this->getEntityManager()->createQueryBuilder();
        $qb1 = $qb1->select('r')
                ->from('FauconRankingBundle:Ranking', 'r')
                ->join('r.player', 'p')
                ->join('r.category', 'c')
                ->where('p = ?1');
        if (count($categoryids) > 0) {
            $qb1 = $qb1
                ->andWhere($qb1->expr()->notIn('c.id', '?2'))
                ->setParameter(2, $categoryids);
        }
        $rankings = $qb1
                ->setParameter(1, $user)
                ->getQuery()
                ->execute();
        foreach ($rankings as $ranking) {
            $em->remove($ranking);
            $em->flush();
        }
        // Add player to new categories
        $qb2 = $this->getEntityManager()->createQueryBuilder();
        $qb2 = $qb2->select('r')
                ->from('FauconRankingBundle:Ranking', 'r')
                ->join('r.player', 'p')
                ->join('r.category', 'c')
                ->where('p = ?1');
        if (count($categoryids) > 0) {
            $qb2 = $qb2
                ->andWhere($qb2->expr()->in('c.id', '?2'))
                ->setParameter(2, $categoryids);
        }
        $currentrankings = $qb2
                ->setParameter(1, $user)
                ->getQuery()
                ->getResult();
        foreach ($currentrankings as $currentranking) {
            if (in_array($currentranking->getCategory()->getId(), $categoryids)) {
                $key = array_search($currentranking->getCategory()->getId(), $categoryids);
                array_splice($categoryids, $key, 1);
            }
        }
        foreach ($categoryids as $categoryid) {
            $category = $this->find($categoryid);
            $newranking = new \Faucon\Bundle\RankingBundle\Entity\Ranking();
            $newranking->setCategory($category);
            $newranking->setPlayer($user);
            $newranking->setCreatedby($currentuser);
            $rank = $this->getEntityManager()->getRepository('FauconRankingBundle:Ranking')->getNextRankingInCategory($category);
            $newranking->setRanking($rank);
            $em->getConnection()->beginTransaction(); // suspend auto-commit
            try {
                $em->persist($newranking);
                $em->flush();
                $em->getConnection()->commit();
            }
            catch (Exception $e) {
                $em->getConnection()->rollback();
                $em->close();
                throw $e;
            }
        }
    }
}