<?php

namespace Faucon\Bundle\ClubBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Faucon\Bundle\ClubBundle\Entity\User;
use Faucon\Bundle\ClubBundle\Entity\Club;
use Faucon\DataProviders\DataTables;
use Faucon\DataProviders\IDataTablesRepository;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * ClubRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClubRepository extends EntityRepository implements IDataTablesRepository
{
    public function getClubsThatUserAdministrates(User $user)
    {
        $clubrelations = $this->getEntityManager()
                ->createQueryBuilder()
                ->select('cr')
                ->from('FauconClubBundle:ClubRelation', 'cr')
                ->join('cr.club', 'c')
                ->where('cr.user = ?1')
                ->andWhere('cr.isAdmin = 1')
                ->setParameter(1, $user)
                ->orderBy('c.name', 'ASC')
                ->getQuery()
                ->getResult();
        $clubs = array();
        foreach ($clubrelations as $clubrelation) {
            $clubs[] = $clubrelation->getClub();
        }
        return $clubs;
    }
    
    public function findByUser(User $user)
    {
        return $this->getEntityManager()
                ->createQueryBuilder()
                ->select('cr')
                ->from('FauconClubBundle:ClubRelation', 'cr')
                ->join('cr.club', 'c')
                ->where('cr.user = ?1')
                ->setParameter(1, $user)
                ->orderBy('c.name', 'ASC')
                ->getQuery()
                ->getResult();
    }


    public function isClubAdministrator(User $user, Club $club)
    {
        try
        {
            return $this->getEntityManager()
                ->createQueryBuilder()
                ->select('cr.isAdmin')
                ->from('FauconClubBundle:ClubRelation', 'cr')
                ->join('cr.club', 'c')
                ->join('cr.user', 'u')
                ->where('cr.user = ?1')
                ->andWhere('cr.club = ?2')
                ->setParameter(1, $user)
                ->setParameter(2, $club)
                ->getQuery()
                ->getSingleScalarResult() == 1;
        }
        catch (\Doctrine\ORM\NoResultException $ex)
        {
            return false;
        }
    }
    
    public function getDataTablesResult(ContainerInterface $container, $pageoffset, $pagesize, $options)
    {
        $result = $this->getEntityManager()
                ->createQueryBuilder()
                ->select('c')
                ->from('FauconClubBundle:Club', 'c')
                ->orderBy('c.name', 'asc')
                ->setFirstResult($pageoffset)
                ->setMaxResults($pagesize)
                ->getQuery()
                ->getResult();
        $data = array();
        $engine = $container->get('templating');
        foreach ($result as $club)
        {
            $row = array();
            $row[] = $club->getName();
            $row[] = $club->getCountry();
            $row[] = $engine->render('FauconClubBundle:Club:linktoclub.html.twig', array('entity' => $club));
            $data[] = $row;
        }
        return $data;
    }

    public function getDataTablesRowsCount(ContainerInterface $container)
    {
        return $this->getEntityManager()
                ->createQueryBuilder()
                ->select('count(c)')
                ->from('FauconClubBundle:Club', 'c')
                ->getQuery()
                ->getSingleScalarResult();        

    }
    
    public function findLastFive()
    {
        return $this->getEntityManager()
                ->createQueryBuilder()
                ->select('c')
                ->from('FauconClubBundle:Club', 'c')
                ->orderBy('c.created', 'desc')
                ->setMaxResults(5)
                ->getQuery()
                ->getResult();
    }
    
    private function getClubIds(User $user)
    {
        $clubs = array();
        foreach ($user->getClubRelations() as $cr) {
            $clubs[] = $cr->getClub()->getId();
        }
        return $clubs;
    }


    public function isUserInMyClub(User $user, User $currentuser)
    {
        $usersclubs = $this->getClubIds($user);
        if (count($usersclubs) == 0) {
            return false;
        }
        $qb = $this->getEntityManager()->createQueryBuilder();
        return $qb->select('count(cr)')
                ->from('FauconClubBundle:ClubRelation', 'cr')
                ->join('cr.user', 'u')
                ->join('cr.club', 'c')
                ->add('where', $qb->expr()->in('c.id', '?1'))
                ->andWhere('u = ?2')
                ->andWhere('cr.isAdmin = 1')
                ->setParameter(1, $usersclubs)
                ->setParameter(2, $currentuser)
                ->getQuery()
                ->getSingleScalarResult() > 0;
    }
}