<?php

namespace Faucon\Bundle\ClubBundle\Repository;

use Doctrine\ORM\EntityRepository;
use \Faucon\Bundle\ClubBundle\Entity\Club;
use Faucon\Bundle\ClubBundle\Entity\InvitationToken;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * InvitationTokenRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InvitationTokenRepository extends EntityRepository
{
    private $container = null;

    public function setContainer(Container $container)
    {
        $this->container = $container;
    }
    
    public function getInvitationToken($token)
    {
        return $this->getEntityManager()->createQueryBuilder()
                ->select('ut')
                ->from('FauconClubBundle:InvitationToken', 'ut')
                ->where('ut.token = ?1')
                ->andWhere('ut.used is null')
                ->setParameter(1, $token)
                ->getQuery()
                ->getOneOrNullResult();
    }
    
    public function createTokensForClub(Club $club, $emails)
    {
        $em = $this->getEntityManager();
        foreach($emails as $email) {
            $invitationtoken = new InvitationToken();
            $invitationtoken->setEmail($email);
            $invitationtoken->setToken($this->createToken($club, $email));
            $invitationtoken->setClub($club);
            $em->persist($invitationtoken);
        }
        $em->flush();
    }
    
    public function sendInvites()
    {
        $em = $this->getEntityManager();
        $invitationTokens = $em->createQueryBuilder()
                ->select('ut')
                ->from('FauconClubBundle:InvitationToken', 'ut')
                ->where('ut.sent is null')
                ->getQuery()
                ->getResult();
        $translator = $this->container->get('translator');
        foreach($invitationTokens as $invitationToken) {
            $message = \Swift_Message::newInstance()
                ->setSubject($translator->trans('invitation.email.subject'))
                ->setFrom($this->container->getParameter('mailer_user'))
                ->setTo($invitationToken->getEmail())
                ->setBody(
                        $this->container->get('templating')->render(
                            'FauconClubBundle:ClubAdmin:invitationemail.txt.twig',
                            array(
                                'url' => $this->getInvitationUrl($invitationToken),
                                'club' => $invitationToken->getClub()->getName())
                        )
                );
            try
            {
                $this->container->get('mailer')->send($message);
                $invitationToken->setSent(new \DateTime());
                $em->persist($invitationToken);
            }
            catch (Exception $ex)
            {
                // Log exception and message body
            }
        }
        $em->flush();
    }
    
    private function getInvitationUrl(InvitationToken $invitationToken)
    {
        return 'http://'.$_SERVER['SERVER_NAME'].$this->container->get('router')->generate('fos_user_registration_signup', array('invitationtoken' => $invitationToken->getToken()));
    }

    private function createToken(Club $club, $email)
    {
        $timestamp = time();
        $sha1string = $email.'_'.$club->getName().'_'.$timestamp;
        return sha1($sha1string);
    }
}